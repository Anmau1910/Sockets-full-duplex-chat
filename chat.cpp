/******************************************************************************
 *                                                                            *
 * Compilar con g++ -o chat chat.cpp -std=c++11 -lfltk -pthread               *
 *                                                                            *
 ******************************************************************************/

// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "chat.h"
#include "fun.c"

UserInterface * ui;

void UserInterface::cb_m_Send_i(Fl_Button*, void*) {
	const char * text = m_Input->value();

 /**
 * AGREGAR AQUI CODIGO PARA ENVIAR TEXTO AL OTRO CHAT.
 **/
	memcpy(buffer_e, text,strlen(text));
	sem_post(&listo);
			 
 /**
 * AGREGAR CODIGO ARRIBA DE ESTE COMENTARIO.
 **/
	sem_wait(&output);
	m_Output->insert("Yo: ");
	m_Output->insert(text);
	m_Output->insert("\n");
	m_Input->value("");
	sem_post(&output);
}
void UserInterface::cb_m_Send(Fl_Button* o, void* v) {
	((UserInterface*)(o->parent()->user_data()))->cb_m_Send_i(o,v);
}

UserInterface::UserInterface() {
	m_Buffer = new Fl_Text_Buffer();
	{ m_MainWindow = new Fl_Double_Window(400, 400);
		m_MainWindow->user_data((void*)(this));
		m_MainWindow->align(Fl_Align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE));
		{ m_Output = new Fl_Text_Display(5, 5, 390, 327);
			m_Output->buffer(m_Buffer);
		} // Fl_Text_Display* m_Output
		{ m_Input = new Fl_Input(70, 335, 250, 60, "Entrada:");
		} // Fl_Input* m_Input
		{ m_Send = new Fl_Button(325, 355, 70, 20, "Enviar");
			m_Send->callback((Fl_Callback*)cb_m_Send);
		} // Fl_Button* m_Send
		m_MainWindow->end();
	} // Fl_Double_Window* m_MainWindow
}

void UserInterface::show(int argc, char ** argv) {
	int off = argc == 1 ? 0 : 1;
	m_MainWindow->show(argc-off, argv+off);
}

void hand(int s){
	if (s == SIGUSR1)
	{
		sem_wait(&output);
		ui-> m_Output -> insert("Otro: ");
		ui-> m_Output -> insert(buffer_l);
		ui-> m_Output -> insert("\n");
		sem_post(&output);
		bzero(buffer_l, 1024);
	}
}

int main(int argc, char **argv) {
	sem_init(&listo, 0, 0);
	sem_init(&output, 0, 1);
	if (argc != 1) {
		a = 1;
		main_b((char *)argv[1]);
	} else {
		a = 0;
		main_a();
	}

	signal(SIGUSR1, hand);

	ui = new UserInterface();
	ui->show(argc, argv);
	return Fl::run();
}
